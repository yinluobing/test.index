;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 抓取配置
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 数据源网址 配置地址  必须以 / 结尾
SITE_URL = "https://bbs.sis001.us/"

; WEB 站根目录
WEB_ROOT = '/data/wwwroot/public'

; 页面URL的匹配
CONTENT_URL_MATCH = "/(https\:\/\/www\.idaima\.com\/a\/\d+\.html)/i"

; 图片存储的路径 必须是绝对路径 并且需要保障目录存在 必须以 / 结尾
IMG_PATH = '/data/wwwroot/public/img/upload/image/'
; 图片存储路径 附加路径 支持日期格式化  目录若不存在会自动创建 最终路径是 IMG_PATH.IMG_PATH_EXT 若参数不为空 必须以 / 结尾
IMG_PATH_EXT = 'Ymd/'

; 是否为调试模式，调试模式下不入库，结果写日志 1是  0否
IS_DEBUG = 0

; 每次读取内页完成后的休眠时间 通常不需要修改 单位:秒
SLEEP_EVERY_GATHER_CONTENT_FINISH = 120

; 允许的标签类型 通常不需要修改
; 此为公用的过滤配置，所有字段都要接受strip_tags的过滤限定
ALLOW_HTML_TAGS = '<p><br><a><h1><h2><h3><h4><h5><h6><i><div><img><b><table><tr><td><ul><li><th><tbody><thead><pre><ol><dl><dt><em><span>'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 数据库配置信息
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; 数据库地址
DB_HOST = '127.0.0.1'

; 数据库名称
DB_NAME = 'collection_yoit_'

; 数据库用户名
DB_USER = 'collection_yoit_'

; 数据库密码
DB_PWD = '4hEMepwbfP'

; 数据库存储的表名称
TABLE_NAME = 'bbs_sis001_us'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 字段映射关系配置信息
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[listRule]
contentRule= ''
urlRule=''
titleRule=''
; 需要得到的每个字段的匹配信息 根据页面及数据库表字段进行设置调整
; 因为使用preg 正则模式 所以必须 把匹配的内容写入 /正则表达式/
; 永远取得正则表达式中第一个匹配项 即 第一个括号里面的内容作为匹配的数据
; 数据库字段名称 = 匹配的正则表达式
[fields]
intro = '/id="content1">(.*?)<\/div>[\^\s]+<script>/i'
ctime = ''
title = "/<h1>(.*?)</i"
content = '/id="content1">(.*?)<\/div>[\^\s]+<script>/i'
nickname = '/<cite>(.*?)</i'
uid = ''
un = ''
status = ''
type = ''
tags = '/jie\-admin.*?>(.*?)</i'
language = '/detail\-hits.*?category\-(\d+)/i';
avatar = '/id="content1">.*?<img.*?src="(.*?png|jpg|gif|bmp|jpeg)"/i'

; 字段的默认值 当匹配不上正则表达式的内容 或 正则表达式的内容为空 使用 默认值替换
; 字段值支持 常量字符串或函数(自定义函数或php系统函数)但是函数必须有返回值
; 若函数不需要参数，直接写函数名称  支持函数的嵌套
[defaultValue]
ctime = "date(Y-m-d H:i:s)"
uid = '2'
status = '1'
un = 'ykswz'
language = '7'
type = 6
avatar = 'http://www.xxx.com/img/avatar.png'

; 对获取的字段数据进一步格式化  精准控制最终的需要的结果内容
; 支持函数格式化操作 支持函数多参数模式 支持嵌套函数调用
; 若字段不需要进一步格式化处理  直接不写此字段的格式化规则即可
; 数据库字段名称 = 函数名称 以及附加的参数如果有的话
; 预定义一个潜规则 $0 代表 原始待处理的数据 系统会自动替换 $0 的函数参数名称 为 待处理的数据对象
[formatValue]
intro = "mb_substr(strip_tags($0), 0, 200)"
title = "strip_tags($0)"
nickname = "strip_tags($0)"
language = "getRealLanguageId($0)"